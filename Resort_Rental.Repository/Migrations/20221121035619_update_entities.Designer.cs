// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResortRental.Repository.DataContext;

#nullable disable

namespace Resort_Rental.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221121035619_update_entities")]
    partial class update_entities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ResortRental.Domain.Entities.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(5);

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(7);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<double>("RentalPrice")
                        .HasColumnType("double")
                        .HasColumnOrder(8);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("UserId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.BillDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<int>("FirstCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<int>("LastCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<double>("ServicePrice")
                        .HasColumnType("double")
                        .HasColumnOrder(5);

                    b.Property<double>("Subtotal")
                        .HasColumnType("double");

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ServiceId");

                    b.ToTable("BillDetail");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("FileLocation")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnOrder(6);

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.ContractDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<long>("GuestId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("GuestId");

                    b.ToTable("ContractDetail");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.Guest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("CitizenId")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(7);

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("varchar(70)")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(8);

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(9);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(8);

                    b.Property<int>("ElectricCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnOrder(6);

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.Property<double>("Square")
                        .HasColumnType("double")
                        .HasColumnOrder(7);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<int>("WaterCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnOrder(6);

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnOrder(7);

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<int>("Authority")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(7);

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.Bill", b =>
                {
                    b.HasOne("ResortRental.Domain.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResortRental.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.BillDetail", b =>
                {
                    b.HasOne("ResortRental.Domain.Entities.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResortRental.Domain.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.Contract", b =>
                {
                    b.HasOne("ResortRental.Domain.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResortRental.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ResortRental.Domain.Entities.ContractDetail", b =>
                {
                    b.HasOne("ResortRental.Domain.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResortRental.Domain.Entities.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Guest");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resort_Rental.Repository.DataContext;

#nullable disable

namespace Resort_Rental.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221127131557_udpate_db")]
    partial class udpate_db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.AppRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(5);

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(6);

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(7);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<double>("RentalPrice")
                        .HasColumnType("double")
                        .HasColumnOrder(8);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.BillDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<int>("FirstCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<int>("LastCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<double>("ServicePrice")
                        .HasColumnType("double")
                        .HasColumnOrder(5);

                    b.Property<double>("Subtotal")
                        .HasColumnType("double");

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ServiceId");

                    b.ToTable("BillDetail");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("FileLocation")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(7);

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnOrder(6);

                    b.Property<long?>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.ContractDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<long>("AppUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractDetail");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnOrder(8);

                    b.Property<int>("ElectricCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnOrder(6);

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.Property<double>("Square")
                        .HasColumnType("double")
                        .HasColumnOrder(7);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<int>("WaterCounter")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(1);

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnOrder(2);

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnOrder(6);

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnOrder(7);

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resort_Rental.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.Bill", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.BillDetail", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resort_Rental.Domain.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.Contract", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.HasOne("Resort_Rental.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Resort_Rental.Domain.Entities.ContractDetail", b =>
                {
                    b.HasOne("Resort_Rental.Domain.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resort_Rental.Domain.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Contract");
                });
#pragma warning restore 612, 618
        }
    }
}
